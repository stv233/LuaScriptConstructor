using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace Crainiate.Diagramming.Testing.Units
{
    /// <summary>
    /// Summary description for UnitTest1
    /// </summary>
    [TestClass]
    public class ModelTests
    {
        [TestMethod]
        public void ModelAddElement()
        {
            Model model = new Model();

            Shape shape = new Shape();
            model.Shapes.Add("Shape1", shape);

            //Check has an autogenerated key
            Assert.IsTrue(shape.Key == "Shape1", "Key not generated correctly for shape");
            Assert.IsTrue(shape.Layer != null, "Layer not set for shape");
            Assert.IsTrue(shape.Layer == model.Layers.CurrentLayer, "Layer not set to model's current layer");
        }

        [TestMethod]
        public void ModelAddElementNoKey()
        {
            Model model = new Model();

            Shape shape = new Shape();
            model.Shapes.Add(shape);

            //Check has an autogenerated key
            Assert.IsTrue(shape.Key == "Shape1", "Key not generated correctly for shape");
            Assert.IsTrue(shape.Layer != null, "Layer not set for shape");
            Assert.IsTrue(shape.Layer == model.Layers.CurrentLayer, "Layer not set to model's current layer");
        }

        [TestMethod, ExpectedException(typeof(Crainiate.Diagramming.Collections.CollectionException))]
        public void ModelEnsureLocked()
        {
            Model model = new Model();

            Shape shape = new Shape();
            model.Elements.Add(shape); //Ensure the elements collection is read only
        }

        [TestMethod, ExpectedException(typeof(Crainiate.Diagramming.Collections.CollectionException))]
        public void ModelBadKey()
        {
            Model model = new Model();

            Shape shape = new Shape();
            model.Shapes.Add("a.key", shape); //keys may not contain .
        }

    }
}
